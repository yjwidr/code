server.port=8001

# Mongodb properties.
# For a cluster, use comma separated string, i.e. 10.0.0.2:27017,10.0.0.3:27017,10.0.0.4:27017
# When username is empty, no authentication is enabled
# password can be either plaintext or encrypted (when it starts with encrypted:)
# For example:
# netbrain.mongodb.servers=192.168.48.42:27017
# netbrain.mongodb.username=mongodb
# netbrain.mongodb.password=encrypted:jrJ2dxmOGDw=1
# netbrain.mongodb.replicaSet=rsnetbrain2
netbrain.mongodb.servers=127.0.0.1:27017
netbrain.mongodb.username=
netbrain.mongodb.password=
netbrain.mongodb.replicaSet=
netbrain.mongodb.ssl=false
netbrain.mongodb.cert_verification=verify_ca_no_limit
mongodb.ngsystem.database=NGSystem
mongodb.flowengine.database=flowengine

# RabbitMQ properties
rabbitmq.addrs=127.0.0.1
rabbitmq.port=5672
rabbitmq.user=guest
rabbitmq.pass=guest
rabbitmq.ssl=false
rabbitmq.reconnectInterval=10000
rabbitmq.cert_verification=verify_ca_no_limit
# Worker Server properties
# version 1 queue name is used by XFAgent built before Jan 23, 2018
workerserver.queue.name.version=2
workerserver.servernames=local_hostname
xfagent.index=local_hostname
queue.size=2000

# Worker server selection algorithm
workerserver.selection.cpu.high.watermark=100
workerserver.selection.ram.high.watermark=100
workerserver.selection.ram.per.task.estimate=0

# how many missing heartbeats can cause TaskEngine to treat a worker server as crashed
# by default, heartbeat is sent every 5 seconds, so 12 times is 1 minute, 60 times is 5 minutes
workerserver.crash.detection.missing.heartbeat.count=60

# if this is false, a task is sent to an overloaded server at a second chance (with 1s delay)
# so that we can get feedback from the ack message from an overloaded server
workerserver.selection.exclude.overloaded.worker=false

# how many unacked tasks can exist per worker server, set this to -1 to disable this check
# when this is set to 1, it greatly slows down task distribution
# use 10 since we are using a relatively small number in warmup workershell count
workerserver.unack.count.limit=10

# total number of concurrent running tasks per worker server
workerserver.concurrent.control.tasks.count=1000
workerserver.concurrent.control.task.types=ScheduleAnalysisDataTask,ScheduleCreateDTGTask

trigger.receiver.username=flow-engine

logging.level.org.springframework.data.mongodb.core.MongoTemplate=INFO
taskqueuemanager.dequeuer.enabled=true
# delay for milliseoncds between sending two tasks, 0 to disable this feature
taskqueuemanager.dequeuer.send.delay.ms=0

background.staledtgchecker.job.interval=3600
background.staledtgchecker.job.enabled=true
# The number of seconds to wait since the last trigger before checking if a DTG is active
background.staledtgchecker.stale.age=3600
# How many stale DTGs to check each time, checking DTG status is a non-trivial task
background.staledtgchecker.batch.size=100

#
background.xfagentservermonitor.monitoringinterval_in_seconds=30

# the interval of XFTask maintenance Quartz Job
background.xftaskmaintenance.maintenanceinterval_in_seconds=30

# the minimum time XFTask stays in unacked status that qualifies for resending by flowengine
background.xftaskmaintenance.task_unack_timelimit_in_seconds = 10

background.xfdbandmemorysync.syncinterval_in_seconds=60

#metric
taskengine.metric.interval=20
taskengine.metirc.path=C:/ProgramData/Netbrain/taskengine/metric.json

#log4j2
logging.config=conf/log4j2.xml

# config file location
flowengine.config.filepath=conf/flowengine.properties
background.config.loader.job.interval=10

# When HA mode is enabled, RabbitMQ resources are different, this is set to false for now
# will be switched to true after thorough testing
taskengine.ha.enabled=false

scheduler.onlyacceptedusername=

taskengine.internal.selectbestworkerdetail=true

# When taskengine's current pending or running tasks reach this number, taskengine will stop processing new root tasks.
taskengine.limit.taskcount=10000

# runs on 0:00:10, 1:00:10, ..., 23:00:10 every day
status.reporter.schedule=10 0 * * * ?